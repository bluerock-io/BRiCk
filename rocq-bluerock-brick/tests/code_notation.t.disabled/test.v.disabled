(*
 * Copyright (c) 2022-2023 BlueRock Security, Inc.
 * This software is distributed under the terms of the BedRock Open-Source License.
 * See the LICENSE-BedRock file in the repository root for details.
 *)
Require Import ZArith.

Require Import bluerock.prelude.base.
Require Import bluerock.lang.cpp.ast.
Require Import bluerock.lang.cpp.notations.
Require Import bluerock.lang.cpp.code_notations.

(* TODO (JH): Add more examples here (and remove the duplicates) *)
Section TestCodeNotations.
  Context (ty : decltype) (e : Expr) (s : Stmt).

  Let stmt1 : Stmt :=
    Sexpr (Eassign (Evar "foo" Tvoid) (Eunop Unot (Evar "bar" Tvoid) Tvoid) Tvoid).
  Print stmt1.

  Let expr1 : Expr :=
    Ebinop Badd (Ederef (Eaddrof (Evar "hello" Tvoid)) Tvoid) (Eint 3%Z Tvoid) Tvoid.
  Print expr1.

  Let stmt2 : Stmt :=
    Sseq (Sexpr (Evar "hello" Tvoid) :: Scontinue :: Sbreak :: Sexpr (Evar "world" Tvoid) :: Sif None (Evar "world" Tvoid) Scontinue Sbreak :: nil).
  Print stmt2.

  Let stmt3 : Stmt :=
    (Sseq (
              [ Sif
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Sseq [Scontinue;Scontinue;Scontinue;Scontinue])
                Sbreak
              ; Sif
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Sseq [])
                Sbreak
              ; Sreturn (Some (Evar "x" Ti32))
              ; Sexpr (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
              ; Sreturn None
              ]%list
    )).
  Print stmt3.

  Let stmt4 : Stmt :=
    Sseq (
                [ Sif
                  (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                  (Ecast Cint2bool
                      (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                  (Scontinue)
                  (Sseq [Scontinue;Scontinue;Scontinue;Scontinue])
                ; Sreturn (Some (Evar "x" Ti32))
                ; Sreturn None
                ]%list
    ).
  Print stmt4.

  Let stmt5 : Stmt :=
    Sseq (
                [ Sif
                  (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                  (Ecast Cint2bool
                      (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                  (Scontinue)
                  (Scontinue)
                ; Sreturn (Some (Evar "x" Ti32))
                ; Sreturn None
                ]%list
    ).
  Print stmt5.

  Let stmt6 : Stmt :=
    Sseq (
                (Sif
                  (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                  (Ecast Cint2bool
                      (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                  (Sseq (
                      (Sexpr
                        (Epostinc (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))
                  Scontinue) ::
                nil
    ).
  Print stmt6.

  Let stmt7 : Stmt :=
    Sseq (
                (Sif
                  (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                  (Ecast Cint2bool
                      (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                  (Sseq (
                      (Sexpr
                        (Epostinc (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))
                  (Sseq (
                      (Sexpr
                        (Epredec (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))) ::
                (Swhile
                  (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                  (Ecast Cint2bool
                      (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                  (Sseq (
                      (Sexpr
                        (Epostdec (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))) :: nil).
  Print stmt7.

  Let stmt8 : Stmt :=
    Sseq (
           (Sdo
              (Sseq (
                   (Sexpr
                          (Epostdec (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))
              (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32))
           ) :: nil).
  Print stmt8.

  Let stmt9 : Stmt :=
    Sseq (
           (Sdo
              (Sseq (
                   (Sexpr
                          (Eassign (Evar "foo" Tvoid) (Eunop Unot (Evar "bar" Tvoid) Tvoid) Tvoid)) :: nil))
              (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32))
           ) :: nil).
  Print stmt9.

  Let stmt10 : Stmt :=
    Sexpr
              (Eassign (Evar "should_continue" Tbool)
                 (Eunop Unot
                    (Ecall
                       (Ecast Cfun2ptr
                          (Eglobal "_Z15process_commandPKN4Zeta8Zeta_ctxEPcR9UmxSharedRmR5Admin"
                             (Tfunction Tbool
                                [Tqualified QC
                                   (Tptr
                                      (Tqualified QC Tvoid));
                                Tptr Tu8; Tref (Tnamed "_Z9UmxShared"); Tref Tu64;
                                Tref Ti32]%list))
                          Prvalue
                          (Tptr
                             (Tfunction Tbool
                                [Tqualified QC
                                   (Tptr
                                      (Tqualified QC Tvoid));
                                Tptr Tu8; Tref (Tnamed "_Z9UmxShared"); Tref Tu64;
                                Tref Ti32]%list)))
                       [Ecast Cl2r
                          (Evar "ctx"
                             (Tqualified QC
                                (Tptr (Tqualified QC Tvoid))))
                          Prvalue
                          (Tptr (Tqualified QC Tvoid));
                       Ecast Carray2ptr (Evar "buffer" (Tarray Tu8 1024)) Prvalue (Tptr Tu8);
                       Evar "shared" (Tref (Tnamed "_Z9UmxShared"));
                       Evar "client" (Tref Tu64); Evar "result" Ti32]%list
                       Tbool) Tbool)
                 Tbool).
  Print stmt10.

  Let stmt11 : Stmt :=
    (Sseq (
              [ Sif
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint 0 (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Scontinue)
                (Sseq [Scontinue;Scontinue;Scontinue;Scontinue])
              ; Sreturn (Some (Evar "x" Ti32))
              ; Sreturn None
              ]
    )).
  Print stmt11.

  Let stmt12 : Stmt :=
    (Sseq (
              [ Sif
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Scontinue)
                (Scontinue)
              ; Sreturn (Some (Evar "x" Ti32))
              ; Sreturn None
              ]
    )).
  Print stmt12.

  Let stmt13 : Stmt :=
    (Sseq (
              (Sif
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Sseq (
                    (Sexpr
                      (Epostinc (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))
                Scontinue) ::
              nil)).
  Print stmt13.

  Let stmt14 : Stmt :=
    (Sseq (
              (Sif
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Sseq (
                    (Sexpr
                      (Epostinc (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))
                (Sseq (
                    (Sexpr
                      (Epredec (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))) ::
              (Swhile
                (Some (Dvar "x" (Tmut Ti32) (Some (Eint (0) (Tmut Ti32)))))
                (Ecast Cint2bool
                    (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32)) Prvalue (Tmut Tbool))
                (Sseq (
                    (Sexpr
                      (Epostdec (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))) :: nil)).
  Print stmt14.

  Let stmt15 : Stmt :=
    (Sseq (
         (Sdo
            (Sseq (
                 (Sexpr
                        (Epostdec (Evar "x" (Tmut Ti32)) (Tmut Ti32))) :: nil))
            (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32))
         ) :: nil)).
  Print stmt15.

  Let stmt16 : Stmt :=
    (Sseq (
         (Sdo
            (Sseq (
                 (Sexpr
                        (Eassign (Evar "foo" Tvoid) (Eunop Unot (Evar "bar" Tvoid) Tvoid) Tvoid)) :: nil))
            (Ecast Cl2r (Evar "x" (Tmut Ti32)) Prvalue (Tmut Ti32))
         ) :: nil)).
  Print stmt16.

  Let stmt17 : Stmt :=
    (Sexpr
            (Eassign (Evar "should_continue" Tbool)
               (Eunop Unot
                  (Ecall
                     (Ecast Cfun2ptr
                        (Eglobal "_Z15process_commandPKN4Zeta8Zeta_ctxEPcR9UmxSharedRmR5Admin"
                           (Tfunction Tbool
                              [Tqualified QC
                                 (Tptr
                                    (Tqualified QC Tvoid));
                              Tptr Tu8; Tref (Tnamed "_Z9UmxShared"); Tref Tu64;
                              Tref Ti32]))
                        Prvalue
                        (Tptr
                           (Tfunction Tbool
                              [Tqualified QC
                                 (Tptr
                                    (Tqualified QC Tvoid));
                              Tptr Tu8; Tref (Tnamed "_Z9UmxShared"); Tref Tu64;
                              Tref Ti32])))
                     [Ecast Cl2r
                        (Evar "ctx"
                           (Tqualified QC
                              (Tptr (Tqualified QC Tvoid))))
                        Prvalue
                        (Tptr (Tqualified QC Tvoid));
                     Ecast Carray2ptr (Evar "buffer" (Tarray Tu8 1024)) Prvalue (Tptr Tu8);
                     Evar "shared" (Tref (Tnamed "_Z9UmxShared"));
                     Evar "client" (Tref Tu64); Evar "result" Ti32]
                     Tbool) Tbool)
               Tbool)).
  Print stmt17.
End TestCodeNotations.
